{"version":3,"file":"view.js","mappings":";;;;;AAAA,MAAMA,YAAY,GAAKC,OAAO,IAAM;EACnC,IAAK,CAAEA,OAAO,EAAG;IAChB;EACD;EAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,gBAAgB,CAACH,OAAO,CAAC;EACtD,IAAII,OAAO,GAASF,QAAQ,CAACG,aAAa,CAAC,sDAAsD,CAAC;EAElG,IAAID,OAAO,EAAE;IAEZH,WAAW,CAACK,OAAO,CAAC,CAACC,EAAE,EAAEC,KAAK,KAAK;MAElC;MACA;MACA,IAAIC,OAAO,GAAGF,EAAE,CAACG,SAAS,CAAC,IAAI,CAAC;;MAEhC;MACA,IAAIC,IAAI,GAAI,WAAUH,KAAM,EAAC;;MAE7B;MACA,IAAII,CAAC,GAAGV,QAAQ,CAACW,aAAa,CAAC,GAAG,CAAC;;MAEnC;MACAD,CAAC,CAACE,IAAI,GAAG,GAAG,GAAGH,IAAI;;MAEnB;MACA,IAAII,EAAE,GAAGb,QAAQ,CAACW,aAAa,CAAC,IAAI,CAAC;;MAErC;MACAE,EAAE,CAACC,MAAM,CAACJ,CAAC,CAAC;;MAEZ;MACAA,CAAC,CAACK,SAAS,GAAGR,OAAO,CAACQ,SAAS;;MAE/B;MACAV,EAAE,CAACW,YAAY,CAAC,IAAI,EAAEP,IAAI,CAAC;MAE3BI,EAAE,CAACG,YAAY,CAAC,aAAa,EAAEX,EAAE,CAACY,YAAY,CAAC,IAAI,CAAC,CAAC;;MAErD;MACA,IAAKZ,EAAE,CAACa,OAAO,KAAK,IAAI,EAAG;QAC1BL,EAAE,CAACM,SAAS,CAACC,GAAG,CAAE,YAAa,CAAC;MACjC,CAAC,MAAM;QACNP,EAAE,CAACM,SAAS,CAACC,GAAG,CAAE,SAAU,CAAC;MAC9B;MAEAlB,OAAO,CAACY,MAAM,CAACD,EAAE,CAAC;IAEnB,CAAC,CAAC;EACH;AACD,CAAC;AAEDhB,YAAY,CAAC,sCAAsC,CAAC;;AAEpD;AACA;AACA,MAAMwB,SAAS,GAAGrB,QAAQ,CAACC,gBAAgB,CAAC,+CAA+C,CAAC;AAE5F,MAAMqB,kBAAkB,GAAKC,QAAQ,IAAM;EAC1C,IAAK,CAAEA,QAAQ,EAAG;IACjB;EACD;EAEA,IAAIC,SAAS,GAAG,IAAI;EAEpBD,QAAQ,CAACnB,OAAO,CAAEqB,IAAI,IAAK;IAC1B,IAAIA,IAAI,CAACN,SAAS,CAACO,QAAQ,CAAC,SAAS,CAAC,IAAID,IAAI,CAACE,kBAAkB,KAAK,IAAI,EAAE;MAC3E;MACAH,SAAS,GAAGxB,QAAQ,CAACW,aAAa,CAAC,IAAI,CAAC;MACxCc,IAAI,CAACG,WAAW,CAACJ,SAAS,CAAC;IAC5B;IACA,IAAIC,IAAI,CAACN,SAAS,CAACO,QAAQ,CAAC,YAAY,CAAC,IAAIF,SAAS,KAAK,IAAI,EAAE;MAChE;MACAA,SAAS,CAACI,WAAW,CAACH,IAAI,CAACjB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7C;MACAiB,IAAI,CAACI,UAAU,CAACC,WAAW,CAACL,IAAI,CAAC;IAClC;EACD,CAAC,CAAC;AACH,CAAC;AAED,IAAKJ,SAAS,CAACU,MAAM,GAAG,CAAC,EAAG;EAC3BT,kBAAkB,CAACD,SAAS,CAAC;AAC9B,C","sources":["webpack://table-of-contents-sticky-nav/./src/view.js"],"sourcesContent":["const buildJumpNav = ( element ) => {\n\tif ( ! element ) {\n\t\treturn;\n\t}\n\n\tconst allElements = document.querySelectorAll(element);\n\tlet jumpNav       = document.querySelector('.wp-block-kdc-table-of-contents-sticky-nav .toc-list');\n\n\tif (jumpNav) {\n\n\t\tallElements.forEach((el, index) => {\n\n\t\t\t// LIST NAV\n\t\t\t// make a copy of the element for use in the jump nav\n\t\t\tlet elClone = el.cloneNode(true);\n\n\t\t\t// Build custom ID for each element based on the index\n\t\t\tlet elId = `heading-${index}`;\n\n\t\t\t// create an anchor tag\n\t\t\tlet a = document.createElement('a');\n\n\t\t\t// set the anchor tag href\n\t\t\ta.href = '#' + elId;\n\n\t\t\t// create a list item to hold the element text\n\t\t\tlet li = document.createElement('li');\n\n\t\t\t// append the anchor to the list item\n\t\t\tli.append(a);\n\n\t\t\t// set the inner text of the list item to the text of the element\n\t\t\ta.innerText = elClone.innerText;\n\n\t\t\t// add the id to each element\n\t\t\tel.setAttribute('id', elId);\n\n\t\t\tli.setAttribute('data-target', el.getAttribute('id'));\n\n\t\t\t// add a class to each element to differentiate h2 vs. h3\n\t\t\tif ( el.tagName === 'H3' ) {\n\t\t\t\tli.classList.add( 'subheading' );\n\t\t\t} else {\n\t\t\t\tli.classList.add( 'heading' );\n\t\t\t}\n\n\t\t\tjumpNav.append(li);\n\n\t\t});\n\t}\n};\n\nbuildJumpNav('.entry-content h2, .entry-content h3');\n\n// Find the H3 / subheading items, wrap them in their own UL, and append to respective H2 / heading item\n// Get the list item elements from within the table of contents\nconst listItems = document.querySelectorAll('.wp-block-kdc-table-of-contents-sticky-nav li');\n\nconst initListItemAppend = ( elements ) => {\n\tif ( ! elements ) {\n\t\treturn;\n\t}\n\n\tlet currentUl = null;\n\n\telements.forEach((item) => {\n\t\tif (item.classList.contains('heading') && item.nextElementSibling !== null) {\n\t\t\t// Append UL element to items with heading class if followed by subheading elements\n\t\t\tcurrentUl = document.createElement('ul');\n\t\t\titem.appendChild(currentUl);\n\t\t}\n\t\tif (item.classList.contains('subheading') && currentUl !== null) {\n\t\t\t// If subheading found after heading, append it to the current ul element\n\t\t\tcurrentUl.appendChild(item.cloneNode(true)); // Append subheading directly to the ul\n\t\t\t// Remove the original subheading element\n\t\t\titem.parentNode.removeChild(item);\n\t\t}\n\t});\n}\n\nif ( listItems.length > 0 ) {\n\tinitListItemAppend(listItems);\n}\n"],"names":["buildJumpNav","element","allElements","document","querySelectorAll","jumpNav","querySelector","forEach","el","index","elClone","cloneNode","elId","a","createElement","href","li","append","innerText","setAttribute","getAttribute","tagName","classList","add","listItems","initListItemAppend","elements","currentUl","item","contains","nextElementSibling","appendChild","parentNode","removeChild","length"],"sourceRoot":""}